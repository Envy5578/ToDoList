@using ToDoList.Domain.Enum
@{
    ViewData["Title"] = "Home Page";
}


<h4 class="mb-3 text-muted">Создание задачи</h4>
<form id="createdTaskForm" method="post">
    <div class="mb-3">
        <label class="form-label">Название задачи</label>
        <input name="name" type="text" class="form-control"/>
    </div>
    <label class="form-label">Приоритет задачи</label>
    <select name="priority" class="form-select mb-3" asp-items="Html.GetEnumSelectList<Priority>()"></select>
    <div class="mb-3">
        <label class="form-label">Описание задачи</label>
        <textarea name="description" type="text" class="form-control" rows="3"></textarea>
    </div>
    <button id="createTask" class="btn btn-primary">Создать</button>
</form>

<br />

<div class="row">
    <div class="form-group col-md-6">
        <label class="col-form-label">Название</label>
        <input name="nameTask" type="text" class="form-control" />
    </div>
    <div class="form-group col-md-6">
        <label class="col-form-label">Приоритет</label>
        <select id="prioritySearch" class="form-control mb-3" asp-items="Html.GetEnumSelectList<Priority>()"></select>
    </div>
</div>

<table class="table table-dark table-hover" id="taskTableId">
    <thead>
        <tr>
            <th>Название</th>
            <th>Сложность</th>
            <th>Описание</th>
            <th>Готовность</th>
            <th>Действие</th>
        </tr>
    </thead>
    <tbody></tbody>
</table> 
@section Scripts
{
    <script type="text/javascript" src="https://cdn.datatables.net/2.2.2/js/dataTables.min.js"></script> 
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        let table = new DataTable('#taskTableId', {
            info: false,
            serverSide: false,
            searching: false,
            paging: false,
            ordering: false,
            ajax: {
                url: "@Url.Action("TaskHandler")",
                method: 'POST',
                dataSrc: 'data', // <<< ВАЖНО: сказать, что данные внутри свойства data
                data: function(d) { // Здесь передаём модель
                    var model = {
                        Name: $('input[name="nameTask"]').val(),
                        Priority: $('#prioritySearch option:selected').val()  // исправил селектор на :selected
                    };
                    return model; // возвращаем модель данных
                },
                success: function (response) {
                    // Скрываем таблицу перед обновлением
                    $('#taskTableId').addClass('table-hidden');

                    // Обновляем данные в таблице
                    table.clear().rows.add(response.data).draw();

                    // Плавно показываем таблицу после обновления
                    setTimeout(function () {
                        $('#taskTableId').removeClass('table-hidden');
                    }, 500); // Обновляем таблицу с новыми данными
                }
            },
            columns: [
                { data: 'name' },
                { data: 'priority' },
                { data: 'description' },
                { data: 'isDone' },
                {
                    data: null,
                    orderable: false,
                    render: function (data, type, row) {
                        return '<button class="btn btn-success btn-sm center-block">Выполнить</button>';
                    }
                }
            ],
            createdRow: function (nRow, data, dataIndex) {
                for (var i = 0; i < $('td', nRow).length - 1; i++) {
                    $('td', nRow).eq(i).css('cursor', 'pointer');
                    $('td', nRow).eq(i).on('click', null);
                }
                $('td button', nRow).on('click', null);
            }
        });


        $('#createTask').on('click', function (e) {
            e.preventDefault(); // Предотвращаем стандартную отправку формы

            var formData = $('#createdTaskForm').serialize();
            console.log("Отправляемые данные: ", formData);

            $.ajax({
                type: 'POST',
                url: '/Task/Create',
                data: formData,
                success: function (response) {
                    Swal.fire({
                        title: 'Информация',
                        text: response.description,
                        icon: 'success',
                        confirmButtonText: 'Окей'
                    });
                },
                error: function (xhr) {
                    Swal.fire({
                        title: 'Ошибка',
                        text: xhr.responseJSON?.description || 'Произошла ошибка',
                        icon: 'error',
                        confirmButtonText: 'Окей'
                    });
                }
            });
        });
        $('input[name="nameTask"], #prioritySearch').on('input change', function () {
            // Скрываем таблицу перед обновлением
            $('#taskTableId').addClass('table-hidden');
            table.ajax.reload(); // Перезагружаем таблицу с новыми фильтрами
        });
    </script>
}
